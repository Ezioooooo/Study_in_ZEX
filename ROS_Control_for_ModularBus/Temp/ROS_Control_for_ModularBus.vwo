self.vismainwindow.setViewerSimulationActive(False)
vismanager.setSimulationFrequency(20)
vismanager.initDefaultLight(True)
light_root.sun.setDirection(-1, 1, -1)
light_root.sun.setAmbient(0.5882353, 0.5882353, 0.5882353, 1)
light_root.sun.setDiffuse(0.4117647, 0.4117647, 0.4117647, 1)
light_root.sun.setSpecular(0.5882353, 0.5882353, 0.5882353, 1)
light_root.setGlobalAmbientColor(0, 0, 0, 1.0)
light_root.sun.setIntensity(1)
light_root.sun.setShadowMode(visnodes.VisLight.ShadowMode.SHADOW_ON)

light_root.setMinimumWorldBBox(True, -148.8847, -79.1659, 0, 113.6153, 183.3341, 0)
light_root.setShadowSoftnessWidth(0.00075);light_root.setShadowJitteringScale(32)
light_root.sun.setShadowTextureSize(4096)

skybox_visual_world = visnodes.VisBackground.createSkybox(vismanager.getVisScene().getShaderScene(), r"skybox_visual_world", r"SKY_Air", 1)
mat = visnodes.VisMaterial_createAndSetVisMaterial(skybox_visual_world);mat.setColors(1.176471, 1.176471, 1.176471, 1.0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
skybox_visual_world_bottom = visnodes.VisTerrain.createTerrain(r"skybox_visual_world_bottom", 1000, 1000, r"Air_Terrain_Diffuse_Color.png", 20000, 20000, -50, True)
mat = visnodes.VisMaterial_createAndSetVisMaterial(skybox_visual_world_bottom);mat.setColors(0.7843137, 0.7843137, 0.7843137, 1.0, 0.7843137, 0.7843137, 0.7843137, 1.0, 0, 0, 0, 1.0, 0, 0, 0, 1)
skybox_visual_world_container = visnodes.VisTransform.createTransformNode(r"skybox_visual_world_container")
skybox_visual_world_container.setNodeMask(8, False)
skybox_visual_world_container.addChild(skybox_visual_world)
non_shader_scene.addChild(skybox_visual_world_container)

terrain_visual_world = visnodes.VisTerrain.createTerrain(r"terrain_visual_world", 1237.63, 1189.998, "Air_Terrain_Diffuse_Color.png", 1237.63, 1189.998)
mat = visnodes.VisMaterial_createAndSetVisMaterial(terrain_visual_world);mat.setColors(0.7843137, 0.7843137, 0.7843137, 1, 0.7843137, 0.7843137, 0.7843137, 1, 0, 0, 0, 1, 0, 0, 0, 1)
mat = visnodes.VisMaterial("mat");mat.setShininess(0);mat.applyComponents(terrain_visual_world, mat.SHININESS, True)
terrain_visual_world_container = visnodes.VisTransform.createTransformNode(r"terrain_visual_world_container")
terrain_visual_world_container.setNodeMask(16, False)
terrain_visual_world_container.addChild(terrain_visual_world)
scene.addChild(terrain_visual_world_container)
terrain_visual_world_container.addChild(skybox_visual_world_bottom)
terrain_visual_world.setTranslation(-17.634765625, 52.0841064453125, 0)

modular_bus_1 = visnodes.VisTransform.load( r"modular_bus_1", r"Vehicles\modular_bus\modular_bus.osgb", True )
modular_bus_1.setNodeMask(0xFFFFFFFF, True)
modular_bus_1.setNodeMaskOnGeodes(70016)
scene.addChild(modular_bus_1)
scene.modular_bus_1.getTransformChild("instance_2")
scene.modular_bus_1.getTransformChild("instance_6")
scene.modular_bus_1.getTransformChild("instance_4")
scene.modular_bus_1.getTransformChild("instance_8")
scene.modular_bus_1.setTranslation(-136.58240830898285, -1.8267207145690918, 0)
scene.modular_bus_1.setRotation(0, 1, 0, 0)

Box_1 = visnodes.VisTransform.load( r"Box_1", r"Box_1.ps3d", True )
Box_1.setNodeMask(0xFFFFFFFF, True)
Box_1.setNodeMaskOnGeodes(70016)
scene.addChild(Box_1)
scene.Box_1.setTranslation(-74.239608764648438, -1.5495672225952148, 0.5)
scene.Box_1.setRotation(0, 1, 0, 0)

Box_2 = visnodes.VisTransform.load( r"Box_2", r"Box_2.ps3d", True )
Box_2.setNodeMask(0xFFFFFFFF, True)
Box_2.setNodeMaskOnGeodes(70016)
scene.addChild(Box_2)
scene.Box_2.setTranslation(-46.8168830871582, 1.8874645233154297, 0.5)
scene.Box_2.setRotation(0, 1, 0, 0)

Box_3 = visnodes.VisTransform.load( r"Box_3", r"Box_3.ps3d", True )
Box_3.setNodeMask(0xFFFFFFFF, True)
Box_3.setNodeMaskOnGeodes(70016)
scene.addChild(Box_3)
scene.Box_3.setTranslation(-1.8141288757324219, -28.296876907348633, 0.5)
scene.Box_3.setRotation(0, 1, 0, 0)

Box_4 = visnodes.VisTransform.load( r"Box_4", r"Box_4.ps3d", True )
Box_4.setNodeMask(0xFFFFFFFF, True)
Box_4.setNodeMaskOnGeodes(70016)
scene.addChild(Box_4)
scene.Box_4.setTranslation(19.599552154541016, -14.876012802124023, 0.5)
scene.Box_4.setRotation(0, 1, 0, 0)

Box_5 = visnodes.VisTransform.load( r"Box_5", r"Box_5.ps3d", True )
Box_5.setNodeMask(0xFFFFFFFF, True)
Box_5.setNodeMaskOnGeodes(70016)
scene.addChild(Box_5)
scene.Box_5.setTranslation(63.896202087402344, 7.15321683883667, 0.5)
scene.Box_5.setRotation(0, 1, 0, 0)

Box_6 = visnodes.VisTransform.load( r"Box_6", r"Box_6.ps3d", True )
Box_6.setNodeMask(0xFFFFFFFF, True)
Box_6.setNodeMaskOnGeodes(70016)
scene.addChild(Box_6)
scene.Box_6.setTranslation(69.379104614257813, 26.676475524902344, 0.5)
scene.Box_6.setRotation(0, 1, 0, 0)

Box_7 = visnodes.VisTransform.load( r"Box_7", r"Box_7.ps3d", True )
Box_7.setNodeMask(0xFFFFFFFF, True)
Box_7.setNodeMaskOnGeodes(70016)
scene.addChild(Box_7)
scene.Box_7.setTranslation(48.004592895507813, 59.808353424072266, 0.5)
scene.Box_7.setRotation(0, 1, 0, 0)

Box_8 = visnodes.VisTransform.load( r"Box_8", r"Box_8.ps3d", True )
Box_8.setNodeMask(0xFFFFFFFF, True)
Box_8.setNodeMaskOnGeodes(70016)
scene.addChild(Box_8)
scene.Box_8.setTranslation(17.6528377532959, 55.8811149597168, 0.5)
scene.Box_8.setRotation(0, 1, 0, 0)

world = visnodes.VisTransform.load("world", "world.osgb", False)
scene.addChild(world)
HumanView_1_mount = visnodes.VisTransform.createTransformNode(r"HumanView_1_mount")
modular_bus_1.addChild(HumanView_1_mount)
scene.getTransformChild("HumanView_1_mount")
HumanView_1_mount.setTranslation(0.5, 0, 1.5)
HumanView_1_mount.setRotation(0, 1, 0, 0)
HumanView_1 = visviewer.VisCamera(r"HumanView_1")
HumanView_1_mount.addChild(HumanView_1)
HumanView_1.setTranslation(0, 0, 0)
HumanView_1.setRotationLegacyYUpAxes(1.5707963267948966, 0, 0, -1)
HumanView_1.setHomePositions()

HumanView_1.setProjectionMatrixPerspective(2.0943951023931953, 1.5707963267948966, 0.10000000149011612, 750)
cameras[r"HumanView_1"] = VisCameras.CameraInfo(r"HumanView_1", HumanView_1, visviewer.VisViewerBase.SPECTATOR, True)
HumanView_2_mount = visnodes.VisTransform.createTransformNode(r"HumanView_2_mount")
modular_bus_1.addChild(HumanView_2_mount)
scene.getTransformChild("HumanView_2_mount")
HumanView_2_mount.setTranslation(-2, 0, 2.8)
HumanView_2_mount.setRotation(0, 1, 0, 0)
HumanView_2 = visviewer.VisCamera(r"HumanView_2")
HumanView_2_mount.addChild(HumanView_2)
HumanView_2.setTranslation(0, 0, 0)
HumanView_2.setRotationLegacyYUpAxes(1.5707963267948966, 0, 0, -1)
HumanView_2.setHomePositions()

HumanView_2.setProjectionMatrixPerspective(2.0943951023931953, 1.5707963267948966, 0.10000000149011612, 750)
cameras[r"HumanView_2"] = VisCameras.CameraInfo(r"HumanView_2", HumanView_2, visviewer.VisViewerBase.SPECTATOR, True)
light_root.generateShaderFromTemplate(True)
